---

- name: create /etc/kubernetes/{manifests,certs}
  shell: mkdir -p /etc/kubernetes/{manifests,certs}
  ignore_errors: yes
- name: create /var/lib/k8s/images
  shell: mkdir -p /var/lib/k8s/images

- name: create /var/lib/yaml
  shell: mkdir -p /var/lib/yaml

- name: create  /var/lib/kubelet
  shell: mkdir -p /var/lib/kubelet

- name: create /root/.kube
  shell: mkdir -p /root/.kube

- name: setenforce 
  shell: setenforce 0
  ignore_errors: yes

- name: copy config file to /root/.kube
  template: src={{role_path}}/templates/config dest=/root/.kube

- name: copy images to images
  copy: src={{role_path}}/../../pre-env/master_images/{{item}} dest=/var/lib/k8s/images
  with_items:
    - "kube-apiserver.tar"
    - "kube-controller-manager.tar"
    - "kube-scheduler.tar"
    - "etcd-3.0.17.tar"
    - "pause-amd64-3.0.tar"
    - "ucarp.tar"
    
- name: copy kublet, kubectl to /usr/bin
  copy: src={{role_path}}/../../pre-env/bin/{{item}} dest=/usr/bin mode=755
  with_items:
    - "kubelet"
    - "kubectl"
- name: copy config manifests files on master
  template: src={{role_path}}/templates/{{item}} dest=/etc/kubernetes/manifests mode=755
  with_items:
    - "etcd.manifest"
    - "apiserver.manifest"
    - "controller-manager.manifest"
    - "scheduler.manifest"
    - "master-ucarp.json"
- name: modfify apiserver.manifest file
  shell: sed -i '/--etcd-servers/s/,",/",/' /etc/kubernetes/manifests/apiserver.manifest
- name: copy systemd files to master
  copy: src={{role_path}}/templates/{{item}} dest=/usr/lib/systemd/system mode=755
  with_items:
    - "kubelet.service"

- name: copy yaml files to master
  template: src={{role_path}}/templates/{{item}} dest=/var/lib/yaml/
  with_items:
    - "flannel.yaml"
    - "kube-proxy.yaml"  
    - "snap.yaml"
    - "fluentd.yaml"

- name: copy startup file
  copy: src={{role_path}}/../../files/k8s-loadimages.service dest=/usr/lib/systemd/system mode=755
- name: copy startup script
  copy: src={{role_path}}/../../files/k8s-loadimages dest=/usr/bin mode=755
  
- name: ln -sv /usr/lib/systemd/system/kubelet.service /etc/systemd/system/multi-user.target.wants/kubelet.service
  shell: ln -sv /usr/lib/systemd/system/kubelet.service /etc/systemd/system/multi-user.target.wants/kubelet.service
  ignore_errors: yes

- name: systemctl daemon-reload
  shell: systemctl daemon-reload
- name: systemctl start k8s-loadimages
  shell: systemctl start k8s-loadimages
- name: ln -sv /usr/lib/systemd/system/k8s-loadimages.service /etc/systemd/system/multi-user.target.wants/k8s-loadimages.service
  shell: ln -sv /usr/lib/systemd/system/k8s-loadimages.service /etc/systemd/system/multi-user.target.wants/k8s-loadimages.service
  ignore_errors: yes

- name: systemctl start kubelet.service
  shell: systemctl start kubelet.service

- name: copy init file
  copy: src={{role_path}}/files/init.sh dest=/var/lib/yaml/init.sh mode=755

- name: run init.sh 
  shell: /var/lib/yaml/init.sh http://{{master_ip_address}}:8080

#- name: start flannel.yml
#  shell: kubectl create -f /var/lib/yaml/flannel.yaml
#  ignore_errors: yes

- name: create kube-proxy.yaml
  shell: kubectl create -f /var/lib/yaml/kube-proxy.yaml
  ignore_errors: yes

- name: run generage snap file
  shell: kubectl apply -f /var/lib/yaml/snap.yaml  
  ignore_errors: yes

#- name: copy fluentd file to yaml
 # template: src=fluentd.yaml dest=/var/lib/yaml
#  shell: kubectl apply -f /var/lib/yaml/fluentd.yaml
